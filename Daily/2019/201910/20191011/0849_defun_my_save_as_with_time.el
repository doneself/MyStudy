(defun my-save-as-with-time(insert-extension)
  (interactive (list (read-string (format "Enter file extention(%s*.txt):" (file-name-as-directory my-custom-savefile-path)))))
  (require 'subr-x)
  (let* ((file-extention (if (string-blank-p insert-extension) "txt" insert-extension))
		 (now-time (format-time-string "%H%M"))
		 (current-line-string (string-trim (buffer-substring-no-properties (line-beginning-position) (line-end-position))))
		 (replace-this-line (replace-regexp-in-string "[:*\n\t ]+" "_" current-line-string))
		 (now-save-file-name (if (string-blank-p current-line-string)
							(format "%s_%s.%s" (format-time-string "%H%M") (format-time-string "%S%3N") file-extention)
							(format "%s_%s.%s" (format-time-string "%H%M") replace-this-line file-extention)))
		 (now-save-full-name (concat (file-name-as-directory default-directory) now-save-file-name))
		 (now-modified-full-name (read-file-name "Write file: " now-save-full-name)))
	(write-file now-modified-full-name)
	(message (format "File save as [%s]" now-modified-full-name))))


(defun my-save-buffer-to-today-work(user-input)
  (interactive (list (read-string (format "Enter file extention(%s*.txt):" (file-name-as-directory my-custom-savefile-path)))))
  (require 'subr-x)
  (let* (p1 p2
		;;(targetpath (file-name-as-directory "D:/Zero/MyDocument/Note/Daily/"))
		;;(this-month (format-time-string "%Y%m"))
		;;(this-daily (format-time-string "%Y%m%d"))
			;;(month-path (concat (file-name-as-directory targetpath) this-month))
		(file-extention (if (string-blank-p user-input) "txt" user-input))
		(daily-path my-custom-savefile-path)
		(current-line-string (string-trim (buffer-substring-no-properties (line-beginning-position) (line-end-position))))
		(replace-this-line (replace-regexp-in-string "[:*\n\t ]+" "_" current-line-string))
;;		(post-path (file-name-as-directory daily-path))
		(post-file-name (if (string-blank-p current-line-string)
							(format "%s_%s.%s" (format-time-string "%H%M") (format-time-string "%S%3N") file-extention)
									(format "%s_%s.%s" (format-time-string "%H%M") replace-this-line file-extention)))
		(post-full-name (concat (file-name-as-directory daily-path) post-file-name))
		)
	;;(beginning-of-line 1)
	;;(setq p1 (point))
	;;(end-of-line 1)
	;;(setq p2 (point))
	;;(delete-region p1 p2)
    ;;(kill-line)
	;;(kill-new "")
	;;(insert post-file-name)
	(unless (file-directory-p daily-path)
	  (make-directory daily-path t))
	;;(with-temp-file post-full-name (insert buff))
	(write-file post-full-name)
	(message (format "File save as [%s]" post-full-name))))
(global-set-key (kbd "C-'") 'my-save-buffer-to-today-work)
